{"version":3,"file":"static/js/478.3b1e378c.chunk.js","mappings":"2OAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6EAMtBC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0FAOtBG,EAAkBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uJ,kDCb5BK,EAAgBP,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAE3BM,EAAgBR,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+FAO5BO,EAAYT,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gT,SCP9B,SAASQ,EAAIC,GAAc,IAAXC,EAAMD,EAANC,OACfC,EAAe,CACnBC,KAAM,GACNC,OAAQ,IAGVC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIL,IAAeM,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAhDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACdL,EAAiBO,EAAjBP,KAAMC,EAAWM,EAAXN,OAERQ,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdX,EAAgBW,EAAhBX,KAAMY,EAAUD,EAAVC,MACdJ,GAAS,SAAAK,GAAS,OAAAT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbS,GAAS,IAAAC,EAAAA,EAAAA,GAAA,GACXd,EAAOY,GAAK,GAEjB,EAQA,OACEG,EAAAA,EAAAA,MAACtB,EAAa,CAACuB,SAPI,SAAAC,GACnBA,EAAEC,iBACFpB,GAAMM,EAAAA,EAAAA,GAAC,CAAC,EAAIG,IACZC,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIL,GAChB,EAGwCoB,SAAA,EACpCJ,EAAAA,EAAAA,MAACrB,EAAa,CAAAyB,SAAA,CAAC,QAEbC,EAAAA,EAAAA,KAACzB,EAAS,CACR0B,KAAK,OACLrB,KAAK,OACLY,MAAOZ,EACPsB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,cACZC,SAAUjB,QAGdM,EAAAA,EAAAA,MAACrB,EAAa,CAAAyB,SAAA,CAAC,gBAEbC,EAAAA,EAAAA,KAACzB,EAAS,CACR0B,KAAK,MACLrB,KAAK,SACLY,MAAOX,EACPqB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,gBACZC,SAAUjB,QAGdW,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLC,QAAQ,YACRC,KAAK,QACLR,KAAK,SACLS,UAAW9B,IAASC,EAAOkB,SAC5B,kBAKP,CC/DO,I,IAAMY,EAAmB7C,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wEAM5B4C,EAAY9C,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yFCHrB6C,EAAc,SAAHpC,GAAuC,IAAjCqC,EAAQrC,EAARqC,SAAUC,EAAetC,EAAfsC,gBACtC,OACEf,EAAAA,EAAAA,KAACW,EAAgB,CAAAZ,SACde,EAASE,KAAI,SAAA1B,GAAA,IAAG2B,EAAE3B,EAAF2B,GAAIrC,EAAIU,EAAJV,KAAMC,EAAMS,EAANT,OAAM,OAC/Bc,EAAAA,EAAAA,MAACiB,EAAS,CAAAb,SAAA,EACRJ,EAAAA,EAAAA,MAAA,QAAAI,SAAA,CAAOnB,EAAK,SACZoB,EAAAA,EAAAA,KAAA,QAAAD,SAAOlB,KACPmB,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLC,QAAQ,YACRC,KAAK,QACLR,KAAK,SACLiB,QAAS,kBAAMH,EAAgBE,EAAG,EAAClB,SACpC,aARakB,EAWJ,KAIpB,ECtBaE,EAAkBrD,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+FAO9BoD,EAAQtD,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gTCNpBqD,EAAS,SAAH5C,GAAmC,IAA7Be,EAAKf,EAALe,MAAO8B,EAAc7C,EAAd6C,eAC9B,OACE3B,EAAAA,EAAAA,MAACwB,EAAe,CAAApB,SAAA,CAAC,yBAEfC,EAAAA,EAAAA,KAACoB,EAAK,CACJnB,KAAK,OACLT,MAAOA,EACPc,SAAUgB,EACVjB,YAAY,qBAIpB,E,UCbakB,EAAY,SAAHjC,GAAY,OAAAA,EAANkC,MAAoB,EAEnCC,EAAmB,SAAHC,GAA8B,IAAxBZ,EAAQY,EAARZ,SAAUU,EAAME,EAANF,OAC3C,OAAKA,GAA4B,kBAAXA,EAIfV,EAASa,MAAMH,QAAO,SAAAI,GAAE,OAC7BA,EAAGhD,KAAKiD,cAAcC,SAASN,EAAOK,cAAc,IAJ7Cf,EAASa,KAMpB,E,oBC+BA,EAlCqB,WACnB,IAAAI,ECNuB,WACvB,IAAMP,GAASQ,EAAAA,EAAAA,IAAYT,GACrBU,GAAWC,EAAAA,EAAAA,MAMjB,MAAO,CAACV,EAJY,SAAH/C,GAAoB,IAAdc,EAAMd,EAANc,OACrB0C,GAASE,EAAAA,EAAAA,GAAU5C,EAAOC,OAC5B,EAGF,CDHgC4C,GAAWC,GAAAnD,EAAAA,EAAAA,GAAA6C,EAAA,GAAlCP,EAAMa,EAAA,GAAEC,EAAWD,EAAA,GAC1BE,EEDyB,WACzB,IAAMzB,GAAWkB,EAAAA,EAAAA,IAAYP,GACvBQ,GAAWC,EAAAA,EAAAA,MAoBjB,OAlBAM,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,MACX,GAAG,CAACR,IAgBG,CAACnB,EAda,SAAA4B,GACO5B,EAAS6B,MACjC,SAAAf,GAAE,OAAIA,EAAGhD,KAAKgE,sBAAwBF,EAAQ9D,KAAKgE,mBAAmB,IAGtEC,EAAAA,GAAAA,MAAY,GAADC,OAAIJ,EAAQ9D,KAAI,yBAG7BqD,GAASc,EAAAA,EAAAA,IAAWL,GACtB,EAEwB,SAAAA,GACtBT,GAASe,EAAAA,EAAAA,IAAcN,GACzB,EAEF,CFtBoDO,GAAaC,GAAAhE,EAAAA,EAAAA,GAAAqD,EAAA,GAAxDzB,EAAQoC,EAAA,GAAEC,EAAYD,EAAA,GAAEnC,EAAemC,EAAA,GAI9C,OACEvD,EAAAA,EAAAA,MAAC9B,EAAS,CAAAkC,SAAA,EACRJ,EAAAA,EAAAA,MAACxB,EAAe,CAAA4B,SAAA,EACdC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAACxB,EAAI,CAACE,OAAQyE,QAGhBxD,EAAAA,EAAAA,MAACxB,EAAe,CAAA4B,SAAA,EACdC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAACqB,EAAM,CAAC7B,MAAO4D,OAAO5B,GAASF,eAAgBgB,IAXjCxB,EAASuC,OAAS,GAa9BrD,EAAAA,EAAAA,KAAAsD,EAAAA,SAAA,CAAAvD,UACEC,EAAAA,EAAAA,KAACa,EAAW,CACVC,SAAUA,EACVC,gBAAiBA,OAIrBpB,EAAAA,EAAAA,MAAC1B,EAAU,CAAA8B,SAAA,CAAC,wBACUC,EAAAA,EAAAA,KAAA,SAAM,0BAG9BA,EAAAA,EAAAA,KAACuD,EAAAA,GAAO,CAACC,SAAS,aAAaC,cAAc,SAIrD,C","sources":["pages/contactPage/contacts.styled.js","components/form/form.styled.js","components/form/form.jsx","components/contactList/contactList.styled.js","components/contactList/contactList.jsx","components/filter/filter.styled.js","components/filter/filter.jsx","redux/contacts/selectors.js","pages/contactPage/contact.jsx","hooks/useFilter.js","hooks/useContact.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 30px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const TextStyled = styled.h3`\n  margin-top: 50px;\n  font-size: 28px;\n  text-align: center;\n  color: #333;\n`;\n\nexport const WrapperContacts = styled.div`\n  padding: 15px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  margin-bottom: 30px;\n  background-color: #f7df1e;\n  border-radius: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const ContainerForm = styled.form``;\n\nexport const ContaierField = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  color: #333;\n`;\n\nexport const FieldItem = styled.input`\n  border: 1px solid #d3d3d3;\n  cursor: pointer;\n  margin-top: 5px;\n  padding: 10px;\n  border-radius: 5px;\n  font-size: 16px;\n  outline: none;\n\n  &:hover {\n    border-color: #1976d2;\n  }\n\n  &:focus {\n    border-color: #ff5722;\n    box-shadow: 0 0 5px rgba(255, 87, 34, 0.5);\n  }\n`;\n","import Button from '@mui/material/Button';\nimport { useState } from 'react';\nimport { ContainerForm, ContaierField, FieldItem } from './form.styled';\n\nexport function Form({ onData }) {\n  const initialState = {\n    name: '',\n    number: '',\n  };\n\n  const [state, setState] = useState({ ...initialState });\n  const { name, number } = state;\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onData({ ...state });\n    setState({ ...initialState });\n  };\n\n  return (\n    <ContainerForm onSubmit={handleSubmit}>\n      <ContaierField>\n        Name\n        <FieldItem\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\" enter name\"\n          onChange={handleChange}\n        />\n      </ContaierField>\n      <ContaierField>\n        Phone number\n        <FieldItem\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\" enter number\"\n          onChange={handleChange}\n        />\n      </ContaierField>\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        type=\"submit\"\n        disabled={!name || !number}\n      >\n        Add contact\n      </Button>\n    </ContainerForm>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactContainer = styled.ul`\n  margin-top: 25px;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const ContactEl = styled.li`\n  margin-left: 15px;\n  margin-top: 10px;\n  color: #333;\n  font-size: 18px;\n`;\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport PropTypes from 'prop-types';\nimport { ContactContainer, ContactEl } from './contactList.styled';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ContactContainer>\n      {contacts.map(({ id, name, number }) => (\n        <ContactEl key={id}>\n          <span>{name}: </span>\n          <span>{number}</span>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </Button>\n        </ContactEl>\n      ))}\n    </ContactContainer>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  color: #333;\n`;\n\nexport const Field = styled.input`\n  border: 1px solid #d3d3d3;\n  cursor: pointer;\n  margin-top: 5px;\n  padding: 10px;\n  border-radius: 5px;\n  font-size: 16px;\n  outline: none;\n\n  &:hover {\n    border-color: #1976d2;\n  }\n\n  &:focus {\n    border-color: #ff5722;\n    box-shadow: 0 0 5px rgba(255, 87, 34, 0.5);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FilterContainer, Field } from './filter.styled';\n\nexport const Filter = ({ value, onChangeFilter }) => {\n  return (\n    <FilterContainer>\n      Find contacts by name\n      <Field\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n        placeholder=\" enter contact\"\n      />\n    </FilterContainer>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getFilter = ({ filter }) => filter;\n\nexport const getVisibleFilter = ({ contacts, filter }) => {\n  if (!filter || typeof filter !== 'string') {\n    return contacts.items;\n  }\n\n  return contacts.items.filter(el =>\n    el.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import { WrapperContacts } from './contacts.styled';\nimport { Toaster } from 'react-hot-toast';\nimport { Form } from 'components/form/form';\nimport { ContactList } from 'components/contactList/contactList';\nimport { Filter } from 'components/filter/filter';\nimport { useFilter } from 'hooks/useFilter';\nimport { useContacts } from 'hooks/useContact';\nimport { Container, TextStyled } from './contacts.styled';\n\nconst ContactsPage = () => {\n  const [filter, onSetFilter] = useFilter();\n  const [contacts, onAddContact, onDeleteContact] = useContacts();\n\n  const empty = () => contacts.length > 0;\n\n  return (\n    <Container>\n      <WrapperContacts>\n        <h2>Phonebook</h2>\n        <Form onData={onAddContact} />\n      </WrapperContacts>\n\n      <WrapperContacts>\n        <h2>Contacts</h2>\n        <Filter value={String(filter)} onChangeFilter={onSetFilter} />\n        {empty() ? (\n          <>\n            <ContactList\n              contacts={contacts}\n              onDeleteContact={onDeleteContact}\n            />\n          </>\n        ) : (\n          <TextStyled>\n            Phonebook is empty! <br /> Add your contacts.\n          </TextStyled>\n        )}\n        <Toaster position=\"top-center\" reverseOrder={false} />\n      </WrapperContacts>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n","import { setFilter } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const useFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return [filter, onSetFilter];\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleFilter } from 'redux/contacts/selectors';\nimport {\n  addContact,\n  fetchContacts,\n  removeContact,\n} from '../redux/contacts/contactThunk';\nimport { toast } from 'react-hot-toast';\nimport { useEffect } from 'react';\n\nexport const useContacts = () => {\n  const contacts = useSelector(getVisibleFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = payload => {\n    const isFindCopyContact = contacts.find(\n      el => el.name.toLocaleLowerCase() === payload.name.toLocaleLowerCase()\n    );\n    if (isFindCopyContact) {\n      toast.error(`${payload.name} is in your Contacts`);\n      return;\n    }\n    dispatch(addContact(payload));\n  };\n\n  const onDeleteContact = payload => {\n    dispatch(removeContact(payload));\n  };\n  return [contacts, onAddContact, onDeleteContact];\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","TextStyled","_templateObject2","WrapperContacts","_templateObject3","ContainerForm","ContaierField","FieldItem","Form","_ref","onData","initialState","name","number","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","prevState","_defineProperty","_jsxs","onSubmit","e","preventDefault","children","_jsx","type","pattern","title","required","placeholder","onChange","Button","variant","size","disabled","ContactContainer","ContactEl","ContactList","contacts","onDeleteContact","map","id","onClick","FilterContainer","Field","Filter","onChangeFilter","getFilter","filter","getVisibleFilter","_ref3","items","el","toLowerCase","includes","_useFilter","useSelector","dispatch","useDispatch","setFilter","useFilter","_useFilter2","onSetFilter","_useContacts","useEffect","fetchContacts","payload","find","toLocaleLowerCase","toast","concat","addContact","removeContact","useContacts","_useContacts2","onAddContact","String","length","_Fragment","Toaster","position","reverseOrder"],"sourceRoot":""}